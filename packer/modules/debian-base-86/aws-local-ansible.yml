---
variables:
  description: 'Debian Base Image'
  ansible_play: 'base-86'
  serverspec: 'base-86'
  slug: 'debian-base'
  version: "{{ uuid }}"
  box_bucket: ''
  # Debian 8.6 cloud images: https://wiki.debian.org/Cloud/AmazonEC2Image/Jessie
  region: 'us-east-1'
  source_ami: 'ami-9d6c128a'
  ami_groups: ''
  ami_regions: ''
  iam_profile: 'instance-base-unstable-tokyo-ap-northeast-1'
  ansible_plays_dir: "{{ env `ANSIBLE_PLAYS_DIR` }}"
  ansible_role_paths: "{{ env `ANSIBLE_ROLE_PATHS` }}"
  ansible_root_dir: "{{ env `ANSIBLE_ROOT_DIR` }}"
  ssh_keypair_name: 'unifiopub'

description: "{{ user `description` }}"

builders:
  - type: 'amazon-ebs'
    ssh_keypair_name: "{{ user `ssh_keypair_name` }}"
    ssh_private_key_file: "{{ user `ssh_keypair_name` }}.pem"
    region: "{{ user `region` }}"
    source_ami: "{{ user `source_ami` }}"
    iam_instance_profile: "{{ user `iam_profile` }}"
    instance_type: 'm3.medium'
    enhanced_networking: true
    ssh_username: 'admin'
    ssh_pty: true
    ami_name: "{{ user `slug` }}-{{ user `version` }}"
    ami_description: "{{ user `description` }}"
    ami_groups: "{{ user `ami_groups` }}"
    ami_regions: "{{ user `ami_regions` }}"
    ami_block_device_mappings:
      - device_name: '/dev/xvda'
        volume_type: 'gp2'
        delete_on_termination: true
    tags:
      App: "{{user `slug`}}"
      Release: "{{ user `version` }}"
  - type: 'docker'
    image: 'debian:jessie'
    commit: true
    run_command: [ "-d", "-i", "-t", "--name", "{{ user `slug` }}", "{{.Image}}", "/bin/bash" ]

provisioners:
  - type: "shell"
    inline:
      - 'apt-get update'
      - 'apt-get -y install sudo python'
      - 'echo "deb http://deb.debian.org/debian jessie-backports main" >> /etc/apt/sources.list'
    only:
      - "docker"

  - type: "shell"
    pause_before: "10s"
    inline:
      - 'sudo apt-get update'
      - 'sudo apt-get -y install aptitude ca-certificates'
      - 'sudo update-ca-certificates'
      - 'sudo apt-get -y upgrade'

  - type: "shell"
    inline:
      - 'sudo apt-get update'
      - 'sudo apt-get -y -t jessie-backports install linux-image-4.7.0-0.bpo.1-amd64'
    except:
      - "docker"

  - type: "shell"
    inline:
      # Docker cgroups
      - 'sudo sed -i "s/GRUB_CMDLINE_LINUX_DEFAULT=\"\(.*\)\"/GRUB_CMDLINE_LINUX_DEFAULT=\"\1 cgroup_enable=memory swapaccount=1\"/" /etc/default/grub'
      - 'sudo update-grub'
      - 'sudo shutdown -r now'
    except:
      - "docker"

  - type: 'ansible'
    pause_before: "30s"
    playbook_file: "./ansible/plays/{{ user `ansible_play` }}.yml"
    extra_arguments: ["-vv"]
    ansible_env_vars:
      - "ANSIBLE_ROLES_PATH=:./ansible/roles/internal/:./ansible/roles/external/"
      - "ANSIBLE_HOST_KEY_CHECKING=False"
    except:
      - "docker"

  - type: 'ansible'
    pause_before: "30s"
    playbook_file: "./ansible/plays/{{ user `ansible_play` }}.yml"
    extra_arguments: ["-vv"]
    ansible_env_vars:
      - "ANSIBLE_ROLES_PATH=:./ansible/roles/internal/:./ansible/roles/external/"
      - "ANSIBLE_HOST_KEY_CHECKING=False"
    extra_arguments:
      - "--extra-vars"
      - "ansible_host={{user `slug`}} ansible_connection=docker ansible_user=root"
    only:
      - "docker"

  - type: "shell"
    inline:
      - 'sudo apt-get remove --purge -y build-essential aptitude'
      - 'sudo apt-get -y autoremove'
      - 'sudo apt-get clean'
      - 'sudo rm -rf /var/lib/apt/lists/*'
    only:
      - "docker"

  - type: 'serverspec'
    rake_file: 'Rakefile.serverspec'
    rake_task: "serverspec:{{ user `serverspec` }}-general"
    rake_env_vars: '$BUNDLE_GEMFILE=Gemfile'

  - type: 'serverspec'
    rake_file: 'Rakefile.serverspec'
    rake_task: "serverspec:{{ user `serverspec` }}-ami"
    rake_env_vars: '$BUNDLE_GEMFILE=Gemfile'
    except:
      - "docker"

post-processors:
  -
    - type: 'docker-tag'
      repository: 'unifio/debian-base'
      tag: "{{ user `version` }}"
      only:
        - 'docker'

  -
    - type: 'vagrant'
      output: "{{ user `slug` }}-{{ user `version` }}.box"
      only:
        - 'amazon-ebs'

    - type: 'vagrant-s3'
      region: "{{user `region`}}"
      bucket: "{{user `box_bucket`}}"
      manifest: "{{ user `slug` }}"
      box_name: "{{ user `slug` }}"
      box_dir: 'boxes'
      acl: 'authenticated-read'
      version: "{{user `version`}}"
      only:
        - 'amazon-ebs'
